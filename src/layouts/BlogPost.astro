---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Navbar from "../components/Navbar.astro";
import { calculateReadTime } from "../lib/utils";
import "../styles/global.css";

type Props = CollectionEntry<"blog">["data"] & {
  content?: string;
};

const { title, description, pubDate, updatedDate, heroImage, tags, content } =
  Astro.props;
const readTime = content ? calculateReadTime(content) : 0;
---

<main>
  <article>
    {
      heroImage && (
        <div class="mb-12">
          <Image
            width={1020}
            height={510}
            src={heroImage}
            alt=""
            class="w-full h-auto rounded-2xl shadow-sm"
          />
        </div>
      )
    }

    <div class="max-w-3xl mx-auto">
      <header class="text-center mb-12">
        <div
          class="flex items-center justify-center gap-4 text-sm text-zinc-500 mb-4 flex-wrap"
        >
          <FormattedDate date={pubDate} />
          {
            readTime > 0 && (
              <span class="flex items-center gap-1">
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                  />
                </svg>
                {readTime} min read
              </span>
            )
          }
        </div>

        {
          updatedDate && (
            <p class="text-sm text-zinc-500 italic mb-4">
              Last updated on <FormattedDate date={updatedDate} />
            </p>
          )
        }

        <h1
          class="text-4xl md:text-5xl font-bold text-zinc-900 leading-tight mb-2"
        >
          {title}
        </h1>

        <h2 class="text-lg text-zinc-600 mb-6 leading-relaxed">
          {description}
        </h2>

        {
          tags && tags.length > 0 && (
            <div class="flex items-center justify-center gap-2 flex-wrap mb-8">
              {tags.map((tag) => (
                <a
                  href={`/posts?tag=${encodeURIComponent(tag)}`}
                  class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-zinc-100 text-zinc-700 hover:bg-zinc-200 transition-colors capitalize"
                >
                  {tag}
                </a>
              ))}
            </div>
          )
        }

        <hr class="border-zinc-200 mb-12" />
      </header>

      <div class="prose prose-lg max-w-none">
        <slot />
      </div>
    </div>
  </article>
</main>
